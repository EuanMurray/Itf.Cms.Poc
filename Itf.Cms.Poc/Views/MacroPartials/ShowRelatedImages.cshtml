@using ClientDependency.Core.Mvc
@using Umbraco.Web
@inherits Umbraco.Web.Macros.PartialViewMacroPage

@{
    Html.RequiresJs("https://cdnjs.cloudflare.com/ajax/libs/react/15.4.2/react.js", 0);
    Html.RequiresJs("https://cdnjs.cloudflare.com/ajax/libs/react/15.4.2/react-dom.js", 0);
    Html.RequiresJs("~/scripts/React/dist/carousel-bundle.js", 0);
    Html.RequiresJs("~/scripts/ShowRelatedImages/ShowRelatedImages.js", 0);
    Html.RequiresCss("~/scripts/React/node_modules/react-responsive-carousel/lib/styles/carousel.min.css", 0);

    Html.RequiresCss("~/scripts/React/node_modules/react-bootstrap-carousel/dist/bootstrap.min.css", 0);
    Html.RequiresCss("~/scripts/React/node_modules/react-bootstrap-carousel/dist/react-bootstrap-carousel.css", 0);

}

@if (Model.MacroParameters["relatedImages"] != null)
{
    <div id="image-carousel"></div>

    var mediaItems = new List<IPublishedContent>();
    var relatedImagesIds = @Model.MacroParameters["relatedImages"];

    <div>
        @foreach (var mediaItem in relatedImagesIds.ToString().Split(','))
        {
            var media = Umbraco.TypedMedia(mediaItem);

            mediaItems.Add(media);
        }

        @{
            var relatedImageData = mediaItems.Select(x => new
            {
                x.Id,
                x.Url,
                Credit = x.GetPropertyValue<string>("credit"),
                Caption = x.GetPropertyValue<string>("caption"),
                CropUrl = x.GetCropUrl("maincrop")
            });

            var serializer = new System.Web.Script.Serialization.JavaScriptSerializer();
            string RelatedImageJson = serializer.Serialize(relatedImageData);

            @Html.Hidden("mediaItems", @RelatedImageJson)
        }
    </div>
}


